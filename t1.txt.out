1.	token # belongs to punctuation
2.	token include belongs to reserved word
3.	token <stdio.h> belongs to library name
4.	token int belongs to reserved word
5.	token i belongs to identifier
6.	token , belongs to punctuation
7.	token k belongs to identifier
8.	token , belongs to punctuation
9.	token m belongs to identifier
10.	token , belongs to punctuation
11.	token *id belongs to pointer
12.	token ; belongs to punctuation
13.	token for belongs to reserved word
14.	token ( belongs to bracket
15.	token i belongs to identifier
16.	token = belongs to operator
17.	token 1 belongs to number
18.	token ; belongs to punctuation
19.	token i belongs to identifier
20.	token < belongs to comparator
21.	token 10 belongs to number
22.	token ; belongs to punctuation
23.	token i belongs to identifier
24.	token ++ belongs to operator
25.	token ) belongs to bracket
26.	token { belongs to bracket
27.	token k belongs to identifier
28.	token = belongs to operator
29.	token k belongs to identifier
30.	token + belongs to operator
31.	token i belongs to identifier
32.	token ; belongs to punctuation
33.	token m belongs to identifier
34.	token = belongs to operator
35.	token 100 belongs to number
36.	token - belongs to operator
37.	token m belongs to identifier
38.	token ; belongs to punctuation
39.	token } belongs to bracket
40.	token printf belongs to reserved word
41.	token ( belongs to bracket
42.	token " belongs to punctuation
43.	token xxx belongs to printed token
44.	token yyy belongs to printed token
45.	token %d belongs to format specifier
46.	token \n belongs to format specifier
47.	token " belongs to punctuation
48.	token , belongs to punctuation
49.	token k belongs to identifier
50.	token ) belongs to bracket
51.	token ; belongs to punctuation
52.	token // This is a comment belongs to comment
53.	token /* This is also a comment. */ belongs to comment

Total: 53 tokens

Reserved word: 4
for
include
int
printf

Library name: 1
<stdio.h>

Identifier: 3
i (x5)
k (x4)
m (x3)

Number: 3
1
10
100

Pointer: 1
*id

Bracket: 4
( (x2)
) (x2)
{
}

Operator: 4
+
++
-
= (x3)

Comparator: 1
<

Punctuation: 4
" (x2)
#
, (x4)
; (x6)

Format specifier: 2
%d
\n

Printed token: 2
xxx
yyy

Comment: 2
/* This is also a comment. */
// This is a comment
